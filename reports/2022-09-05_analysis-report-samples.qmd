---
title: "Analysis of Psoriasis scRNA-Seq data from Bennet"
author: "Maria Schmidt"
affiliation: "IZBI, Interdisciplinary Centre for Bioinformatics, Leipzig University, Germany"
date: today
format:
  html:
    toc: true
    number-sections: true
    code-fold: true
  pptx: default
  pdf: default
execute: 
  echo: true
  error: false
  warning: false
link-citations: true
bibliography: "library.bib"
params:
  run: "Reynolds2021_Data-all_seuratObj"
embed-resources: true
self-contained: true
---


```{r}
pacman::p_load(Seurat, tidyverse, here, ggplot2, pals, flextable, patchwork)
source(here("src","seurat-functions.r"))
source(here("src","make-nicknames-for-celltypes.r"))
output_data_path <- "output"
input_data_path <- "data"

if(params$run == "Reynolds2021_Data-all_seuratObj" | params$run == "billi2022_seurat-object" ){
  
      load(here("output", paste0(params$run,".RData")))
  
      if(params$run == "Reynolds2021_Data-all_seuratObj"){
        cell_type = "Cell_type_nicknames"
        orig_ident <- "Flow_gate"
        seurat_object$Cell_type_nicknames <- make_nicknames(seurat_object$Cell_type)
        seurat_object$predicted.id.Cell_type_nicknames <- seurat_object$Cell_type_nicknames 
      } else {
         cell_type = "predicted.id.Cell_type_nicknames"
        orig_ident <- "orig.ident"
        seurat_object$predicted.id.Cell_type_nicknames <-  factor(x =  seurat_object$predicted.id.Cell_type_nicknames, levels = c(
       "KC premit", "KC mit", "KC postmit", "KC CD83+", "Melanocyte", "Schwann", "Stromal Schwann",
       "Fb 1", "Fb 2", "Fb 3", "Pericyte", "VE 1", "VE 2", "VE 3", "LE 1", "LE 2", "ILC", "NK1", "NK2", "NK3",
       "Tc", "Th", "Treg", "Mast cell", "Plasma cell", "Mac 1", "Mac 2", "DC1", "DC2", "LC1", "LC2","LC3", "LC4", "KLF10 LC",
       "Monocyte", "IL23 DC", "pDC", "moDC1", "moDC2", "Mig. cDC"
  ))
   DefaultAssay(seurat_object) <- "RNA"     
      }
      unfiltered_matrix_ncol <- ncol(seurat_object)
      celltype_colors <- randomcoloR::distinctColorPalette(length(table(seurat_object@meta.data[, cell_type])))
      celltype_cluster_data <- data.frame(
          table(seurat_object@meta.data[, cell_type]),
          "color" = celltype_colors )
    
    } else {
      
      seurat_object <- load_seurat_object(data_set_name = params$run,  output_data_path = output_data_path)
      cell_type = "predicted.id.Cell_type_nicknames"
      orig_ident = "orig.ident"
      unfiltered_matrix_ncol <- ncol(Read10X(data.dir =  here(input_data_path, params$run, "filtered_feature_bc_matrix")))
      # seurat_object$predicted.id.Cell_type_nicknames <- make_nicknames(seurat_object$predicted.id.Cell_type)
      celltype_colors <- randomcoloR::distinctColorPalette(length(unique(seurat_object@meta.data[, cell_type])))
      names(celltype_colors) <- sort(unique(seurat_object@meta.data[, cell_type]))
      celltype_cluster_data <- data.frame(
          table(seurat_object@meta.data[, cell_type])[which(table(seurat_object@meta.data[, cell_type])>0)],
          "color" = celltype_colors
      )
             seurat_object$predicted.id.Cell_type_nicknames <-  factor(x =  seurat_object$predicted.id.Cell_type_nicknames, levels = c(
       "KC premit", "KC mit", "KC postmit", "KC CD83+", "Melanocyte", "Schwann", "Stromal Schwann",
       "Fb 1", "Fb 2", "Fb 3", "Pericyte", "VE 1", "VE 2", "VE 3", "LE 1", "LE 2", "ILC", "NK1", "NK2", "NK3",
       "Tc", "Th", "Treg", "Mast cell", "Plasma cell", "Mac 1", "Mac 2", "DC1", "DC2", "LC1", "LC2","LC3", "LC4", "KLF10 LC",
       "Monocyte", "IL23 DC", "pDC", "moDC1", "moDC2", "Mig. cDC"
  ))

}
seurat_colors <- scales::hue_pal()(length(unique(seurat_object@meta.data[, "seurat_clusters"])))
seurat_cluster_data <- data.frame(
    table(seurat_object@meta.data[, "seurat_clusters"]),
    "color" = seurat_colors
)
filename <- here(output_data_path, "bennets-skin-marker.RData")
load(filename)
filename <- here(output_data_path, "reynolds-skin-marker.RData")
load(filename) 
filename <- here(output_data_path, "interleukins.RData")
load(filename)
# filename <- here(output_data_path, "TXLNA-cells-markers.RData")
# load(filename)
# filename <- here(output_data_path, "IFNL1-cells-markers.RData")
# load(filename)
filename <- here(output_data_path, paste( params$run, cell_type, "marker.RData", sep = "_"))
load(filename)


```

# Preprocessing, data integration and dimension reduction

## Quality check

```{r, echo=FALSE,  fig.width = 16, fig.height = 11}
p1 <- VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), group.by = cell_type, cols = celltype_colors)
p2 <- VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), group.by = "seurat_clusters")

p1 / p2
```

```{r, echo=FALSE,  fig.width = 7, fig.height = 5}
VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), group.by = orig_ident)
FeatureScatter(seurat_object, feature1 = "nCount_RNA", feature2 = "percent.mt", group.by = orig_ident)
ggplot(seurat_object@meta.data) +
    geom_point(aes(x = nCount_RNA, y = nFeature_RNA, colour = percent.mt)) +
    theme_minimal()
```


```{r, echo=FALSE,  fig.width = 7, fig.height = 7}
ft <- flextable::continuous_summary(
  seurat_object@meta.data,
  columns = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.rps"),
  by = orig_ident,
  hide_grouplabel = TRUE,
  digits = 1
)
ft <-  set_caption(ft, caption = "Statistics of number of counts, features, mitochondrial expression and ribosomal expression")
ft
```

## Cell-cycle scoring

```{r, echo=FALSE,  fig.width = 6, fig.height = 5}
DimPlot(seurat_object, reduction = "umap", label = FALSE, group.by = "Phase")
```

## Unsupervised louvain clustering

To cluster cell in an unsupervised fashion, we applied the Louvain-algorithm implemented in the Seurat package.

```{r, echo=FALSE,  fig.width = 10, fig.height = 5}
p1 <- DimPlot(seurat_object, reduction = "umap", label = TRUE, repel = TRUE, group.by = "seurat_clusters") + theme(legend.position = "none")
p2 <- ggplot(seurat_cluster_data, aes(x = Var1, y = Freq, fill = Var1)) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  scale_fill_manual(values = seurat_cluster_data[, "color"]) +
  coord_flip() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
  ) +
  xlab("Cluster") +
  ylab("Frequency")

p1 + p2
```

## Celltype classification using a reference dataset

We projected celltypes from a healthy scRNA-Seq dataset (Reynolds et al., 2021) onto our dataset.

```{r, echo=FALSE,  fig.width = 10, fig.height = 5}

Idents(seurat_object) <- cell_type

p1 <- DimPlot(seurat_object, reduction = "umap", group.by = cell_type, cols = celltype_colors) + theme(legend.position = "none", legend.text = element_text(size = 7)) + ggtitle("")


p2 <- ggplot(seurat_object@meta.data, aes(x = predicted.id.Cell_type_nicknames, fill = predicted.id.Cell_type_nicknames)) +
  geom_bar() +
  theme_minimal() +
  scale_fill_manual(values = celltype_colors) +
  scale_x_discrete(limits = levels(seurat_object$predicted.id.Cell_type_nicknames)) +
  coord_flip() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
  ) +
  xlab("Celltype") +
  ylab("Frequency")

p1 + p2

```

To verify this further, we examined some canonical cell type markers for the specific skin and immune cell populations.

```{r, echo=FALSE, fig.align = "center", fig.height = 10, fig.width = 15 }
DotPlot(seurat_object, features = skin_marker, group.by = cell_type, dot.scale = 6) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10)
  )
```


# Cytokine expression

## All expressed Cytokines (no receptors)
  
```{r, echo=FALSE, fig.align = "center", fig.height = 10, fig.width = 15 }
#| label: dotplot_all-cytokines_no-receptors

cytokines <- intersect(interleukins, rownames(seurat_object))
cytokines <- unique(c(cytokines,"IFNG", "TNF", "LTA", "TGFA", "TGFB1", "TGFB2", "TGFB3" )) 
cytokines <- sort(cytokines)

DotPlot(
  seurat_object, 
  features = cytokines, 
  group.by = "predicted.id.Cell_type_nicknames", 
  dot.scale = 5,
  cluster.idents = TRUE
) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  scale_y_discrete(limits = levels(seurat_object$predicted.id.Cell_type_nicknames))

```

## All expressed Cytokines + receptors

```{r, echo=FALSE, fig.align = "center", fig.height = 20, fig.width = 15}
#| label: dotplot_all-cytokines_with-receptors

cytokines_receptors <- intersect(interleukins, rownames(seurat_object))
cytokines_receptors <- unique(c(cytokines_receptors, rownames(seurat_object)[grep("^IL", rownames(seurat_object))], "IFNG", "TNF", "LTA", rownames(seurat_object)[grep("^TGF", rownames(seurat_object))] )) 
cytokines_receptors <- sort(cytokines_receptors)
cytokines_receptors <- cytokines_receptors[-grep("ILK", cytokines_receptors)]
cytokines_receptors <- cytokines_receptors[-grep("IL4I", cytokines_receptors)]

DotPlot(
  seurat_object, 
  features = cytokines_receptors, 
  group.by = "predicted.id.Cell_type_nicknames", 
  dot.scale = 5,
  cluster.idents = TRUE
) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  scale_y_discrete(limits = levels(seurat_object$predicted.id.Cell_type_nicknames)) +
  coord_flip()


```

```{r, fig.height=5,fig.width=25, include=FALSE}
#| fig-height: 10
#| fig-width: 10
DotPlot(seurat_object, features = cytokines_receptors, group.by = "predicted.id.Cell_type_nicknames", dot.scale = 6) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 12),
    axis.text.y = element_text(size = 20)
  )

```

## Genes of interest

### Dotplot

```{r, echo=FALSE, fig.align = "center", fig.height = 10, fig.width = 7}
#| label: dotplot_genes-of-interest

genes_of_interest <- c("IL17A", "IL17F", "TNF", "TGFA", "TGFB1", "IL22", "IL23", "TXLNA", "IL18", "IL32")

DotPlot(
  seurat_object, 
  features = genes_of_interest, 
  group.by = "predicted.id.Cell_type_nicknames", 
  dot.scale = 5,
  cluster.idents = TRUE
) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  scale_y_discrete(limits = levels(seurat_object$predicted.id.Cell_type_nicknames)) 

```

### Feature Plots

```{r, echo=FALSE, fig.align = "center",  fig.height = 20, fig.width = 10 }
#| label: feature-plots_genes-of-interest

genes_of_interest <- c("IL17A", "IL17F", "TNF", "TGFA", "TGFB1", "IL22", "IL23", "TXLNA", "IL18", "IL32")

Idents(seurat_object) <- "predicted.id.Cell_type_nicknames"
FeaturePlot(
  seurat_object, 
  features = genes_of_interest,
  ncol = 2,
  order = TRUE, 
  label = TRUE, 
  repel = TRUE,
  min.cutoff = "q1",
  max.cutoff = "q99"
)
```

## All expressed Cytokines (no receptors) in inflammatory celltypes

```{r, echo=FALSE, fig.align = "center", fig.height = 7, fig.width = 15 }
#| label: dotplot_all-cytokines_no-receptors_inflammatory-celltypes

dendritic <- grep("DC", unique(seurat_object$predicted.id.Cell_type_nicknames), value = TRUE)
tcells <- c("Tc", "Th", "Treg")
macrophages <- grep("Mac", unique(seurat_object$predicted.id.Cell_type_nicknames), value = TRUE)
langerhans <- grep("LC", unique(seurat_object$predicted.id.Cell_type_nicknames), value = TRUE)
inflammatory <- sort(c(dendritic, tcells, macrophages, langerhans, "Mast cell", "Monocyte", "Plasma cell" ))


DotPlot(
  seurat_object, 
  features = cytokines, 
  group.by = "predicted.id.Cell_type_nicknames", 
  dot.scale = 5,
  # cluster.idents = TRUE,
  idents = inflammatory
) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) 

```

## All expressed cytokines + receptors in inflammatory celltypes

```{r, echo=FALSE, fig.align = "center", fig.height = 20, fig.width = 10 }
#| label: dotplot_all-cytokines_with-receptors_inflammatory-celltypes

DotPlot(
  seurat_object, 
  features = cytokines_receptors, 
  group.by = "predicted.id.Cell_type_nicknames", 
  dot.scale = 5,
  #cluster.idents = TRUE,
  idents = inflammatory
) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  coord_flip()


# DotPlot(seurat_object, features = cytokines_receptors, group.by = "predicted.id.Cell_type_nicknames", dot.scale = 6, idents = inflammatory) +
#   scale_color_gradient2(high = "red", low = "blue") +
#   theme(
#     axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 12),
#     axis.text.y = element_text(size = 20)
#   )

```

## Genes of interest in inflammatory celltypes

```{r, echo=FALSE, fig.align = "center"}
#| label: dotplot_genes-of-interest_inflammatory-celltypes

genes_of_interest <- c("IL17A", "IL17F", "TNF", "TGFA", "TGFB1", "IL22", "IL23", "TXLNA", "IL18", "IL32")

DotPlot(
  seurat_object, 
  features = genes_of_interest, 
  group.by = "predicted.id.Cell_type_nicknames", 
  dot.scale = 5,
  #cluster.idents = TRUE,
  idents = inflammatory
) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  )  

```

<!-- ## Selected ILs/Features -->

<!-- ```{r, echo=FALSE, fig.align = "center",  fig.height = 20, fig.width = 12, include=FALSE } -->

<!-- genes.bennet <- intersect(c(paste0("IL17", LETTERS[1:6]), rownames(seurat_object)[grep("IL12", rownames(seurat_object))], "IL23R", "IL23A", "NOS1", "NOS2", "IL13", "IL13RA1"), rownames(seurat_object)) -->

<!-- Idents(seurat_object) <- "predicted.id.Cell_type_nicknames" -->
<!-- FeaturePlot( -->
<!--   seurat_object,  -->
<!--   features = genes.bennet[1:6], -->
<!--   ncol = 2, -->
<!--   order = TRUE,  -->
<!--   label = TRUE,  -->
<!--   repel = TRUE, -->
<!--   min.cutoff = "q1", -->
<!--   max.cutoff = "q99" -->
<!-- ) -->

<!-- ``` -->

<!-- ```{r, echo=FALSE, fig.align = "center", fig.height = 7, fig.width = 10, include=FALSE} -->

<!-- DotPlot(seurat_object, features = genes.bennet, group.by = "predicted.id.Cell_type_nicknames", dot.scale = 4) + -->
<!--   scale_color_gradient2(high = "red", low = "blue") + -->
<!--   theme( -->
<!--     axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 12) -->
<!--   ) -->

<!-- ``` -->

<!-- ## Selected ILs/Features in inflammatory celltypes -->

<!-- ```{r, echo=FALSE, fig.align = "center",  fig.height = 5, fig.width = 12 , include=FALSE} -->

<!-- DotPlot(seurat_object, features = genes.bennet, group.by = "predicted.id.Cell_type_nicknames", dot.scale = 4, idents = inflammatory) + -->
<!--   scale_color_gradient2(high = "red", low = "blue") + -->
<!--   theme( -->
<!--     axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 14) -->
<!--   ) -->

<!-- ``` -->


# Interesting interferons (IFNs)

## Interferone (alpha, beta, gamma), TNF-alpha, TGFalpha

```{r, echo=FALSE, fig.align = "center", fig.height = 8, fig.width = 6 }

DotPlot(seurat_object, features = c("TNF", "LTA",  "TGFA", "TGFB1"), group.by = "predicted.id.Cell_type_nicknames", dot.scale = 6) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  )

```



```{r, echo=FALSE, fig.align = "center", fig.height = 8, fig.width = 11 }

FeaturePlot(
  seurat_object,
  features = c("TNF", "LTA",  "TGFA", "TGFB1"),
  ncol = 2,
  order = TRUE,
  label = TRUE,
  repel = TRUE,
  min.cutoff = "q1",
  max.cutoff = "q99"
)

```

## All TNFs and TGFs

```{r, echo=FALSE, fig.align = "center", fig.height = 8, fig.width = 15}
#| label: dotplot_all-tnfs-and-tgfs

interferons <- c(rownames(seurat_object)[grep("^TNF", rownames(seurat_object))], rownames(seurat_object)[grep("^TGF", rownames(seurat_object))])

DotPlot(seurat_object, features = interferons, group.by = "predicted.id.Cell_type_nicknames", dot.scale = 6) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  )
```

# S100A... proteins

## Dotplot

```{r, echo=FALSE, fig.align = "center", fig.height = 7, fig.width = 10 }
#| label: dotplot_S100A-proteins

S100A_proteins <- sort(rownames(seurat_object)[grep("S100A", rownames(seurat_object))])

DotPlot(seurat_object, features = S100A_proteins, group.by = "predicted.id.Cell_type_nicknames", dot.scale = 4) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  )
```

## Feature Plots

```{r, echo=FALSE, fig.align = "center",  fig.height = 40, fig.width = 10 }
#| label: feature-plots_S100A-proteins

Idents(seurat_object) <- "predicted.id.Cell_type_nicknames"
FeaturePlot(
  seurat_object, 
  features = S100A_proteins,
  ncol = 2,
  order = TRUE, 
  label = TRUE, 
  repel = TRUE,
  min.cutoff = "q1",
  max.cutoff = "q99"
)

```

# Further selected genes

## Feature plots

```{r, echo=FALSE, fig.align = "center",  fig.height = 50, fig.width = 10 }
genes.bennet <- intersect(c(rownames(seurat_object)[grep("IL17", rownames(seurat_object))], "TNF", "TNFRSF1A", "IL22", rownames(seurat_object)[grep("IL12", rownames(seurat_object))], "IL23R", "IL23A", "NOS1", "NOS2", "IL13", "IL13RA1"), rownames(seurat_object))
Idents(seurat_object) <- "predicted.id.Cell_type_nicknames"
FeaturePlot(
  seurat_object, 
  features = genes.bennet,
  ncol = 2,
  order = TRUE, 
  label = TRUE, 
  repel = TRUE
)
```


## Dotplot

```{r, echo=FALSE, fig.align = "center", fig.height = 7, fig.width = 10}
DotPlot(seurat_object, features = genes.bennet, group.by = "predicted.id.Cell_type_nicknames", dot.scale = 4) +
  scale_color_gradient2(high = "red", low = "blue") +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 12)
  )

```

